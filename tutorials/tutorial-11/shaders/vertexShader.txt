#version 150

// Definição dos atributos de entrada
in vec3 position;            // Atributo de posição do vértice (coordenadas x, y e z)
in vec2 textureCoordinates;  // Atributo de coordenadas de textura do vértice (coordenadas u e v)
in vec3 normal;              // Atributo de vetor normal do vértice (coordenadas x, y e z)

// Definição das variáveis de saída
out vec2 pass_textureCoordinates;  // Variável de saída para as coordenadas de textura
out vec3 surfaceNormal;            // Variável de saída para o vetor normal do vértice
out vec3 toLightVector;            // Variável de saída para o vetor que aponta para a luz

// Definição das matrizes uniformes para transformação dos vértices
uniform mat4 transformationMatrix;  // Matriz de transformação do objeto no espaço do modelo
uniform mat4 projectionMatrix;      // Matriz de projeção do vértice no espaço da tela
uniform mat4 viewMatrix;            // Matriz de visualização da câmera
uniform vec3 lightPosisiton;        // Posição da fonte de luz no espaço do mundo

void main(void) {

    // Transformação do vértice aplicando as matrizes de projeção, visualização e modelo
    vec4 worldPosition = transformationMatrix * vec4(position, 1.0);
    gl_Position = projectionMatrix * viewMatrix * worldPosition;
    
    // Passagem das coordenadas de textura para a próxima etapa do pipeline de renderização
    pass_textureCoordinates = textureCoordinates;

    // Transformação do vetor normal do vértice para o espaço do mundo
    // (o vetor normal é multiplicado por uma matriz de rotação inversa transposta)
    surfaceNormal = (transformationMatrix * vec4(normal, 0.0)).xyz;

    // Cálculo do vetor que aponta da posição do vértice para a posição da luz
    toLightVector = lightPosisiton - worldPosition.xyz;
}
